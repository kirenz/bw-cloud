[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Cloud Architecure",
    "section": "",
    "text": "Introduction\nThe bwCloud is an “infrastructure-as-a-service” environment, specially developed and operated for research and teaching in Baden-Württemberg.\nWith the bwCloud, virtual servers or virtual machines (VMs) can be created, started and operated. These virtual machines include resources such as virtual CPUs (vCPUs), main memory (RAM), network access (IPv4 and IPv6 addresses) and storage space (storage) and do not differ in operation and administration from “real” physical machines.\nThis online book covers how to set up bwCloud."
  },
  {
    "objectID": "instance.html",
    "href": "instance.html",
    "title": "Virtual Machine",
    "section": "",
    "text": "tbd"
  },
  {
    "objectID": "instance-register.html",
    "href": "instance-register.html",
    "title": "1  Register for bwCloud SCOPE",
    "section": "",
    "text": "Registration is required to use the bwCloud infrastructure.\n\nVisit this site and choose your home organization and click on “Proceed” or press enter.\nRegister for “bwCloud SCOPE”"
  },
  {
    "objectID": "key-pairs-create.html#what-is-ssh",
    "href": "key-pairs-create.html#what-is-ssh",
    "title": "2  Create SSH-Key",
    "section": "2.1 What is SSH?",
    "text": "2.1 What is SSH?\nSSH (Secure Shell) is a software package that enables secure system administration and file transfers over insecure networks. It is used in nearly every data center and in every large enterprise.\nAlthough SSH provides an encrypted connection, using passwords with SSH connections would leave our virtual machine (VM) in bwCloud vulnerable to attacks. Therefore, we connect to our VM over SSH using a public-private key pair, also known as SSH keys.\n\nThe public key is placed on your VM.\nThe private key remains on your local system. Protect this private key. Do not share it.\n\nWhen you use an SSH client to connect to your VM (which has the public key), the remote VM tests the client to make sure it has the correct private key. If the client has the private key, it’s granted access to the VM."
  },
  {
    "objectID": "key-pairs-create.html#create-ssh-keys-in-windows",
    "href": "key-pairs-create.html#create-ssh-keys-in-windows",
    "title": "2  Create SSH-Key",
    "section": "2.2 Create SSH-Keys in Windows",
    "text": "2.2 Create SSH-Keys in Windows\nFollow the instructions provided in bwCloud: SSH-Key Paar erzeugen"
  },
  {
    "objectID": "key-pairs-create.html#create-ssh-keys-in-macos",
    "href": "key-pairs-create.html#create-ssh-keys-in-macos",
    "title": "2  Create SSH-Key",
    "section": "2.3 Create SSH-Keys in MacOS",
    "text": "2.3 Create SSH-Keys in MacOS\n\n2.3.1 Create key\nOpen a terminal and run the following command:\nssh-keygen\nThis will output:\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/Users/username/.ssh/id_rsa):\nPress enter to save your keys to the default /Users/username/.ssh directory.\nAfter entering and confirming your password, you’ll see something like the following:\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/Users/username/.ssh/id_rsa):\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\nYour identification has been saved in /Users/username/.ssh/id_rsa\nYour public key has been saved in /Users/username/.ssh/id_rsa.pub\nThe key fingerprint is:\nSHA256:BOJAxs0Rkhusd9Hq/xdqWDnfd1cdxN5Uk+hD2gNwNLA1HvUM username@somename.local\nThe key's randomart image is:\n+---[RSA 3072]----+\n| .o*O ..D.BB+...o|\n|  .*. .  +o+=E...|\n|   ..        ..oo|\n|    . ..    oo o=|\n|   . . .S     o +|\n|           . .  .|\n|   ..o. . D.     |\n|   .+. .   XC    |\n|  .o.o.   L.     |\n+----[SHA256]-----+"
  },
  {
    "objectID": "key-pairs-create.html#set-permissions",
    "href": "key-pairs-create.html#set-permissions",
    "title": "2  Create SSH-Key",
    "section": "2.4 Set permissions",
    "text": "2.4 Set permissions\nNext, we use chmod to change permissions (otherwise, bwCloud will refuse the connection).\n\n\n\n\n\n\nIn Unix and Unix-like operating systems, chmod is the command and system call used to change the access permissions of files and directories. The name chmod was chosen as an abbreviation of change mode.\n\n\n\nChmod 700 sets folder permissions so that only the owner can read, write and execute files in this folder:\nchmod 700 .ssh\nPermissions of 600 mean that the owner has full read and write access to the file, while no other user can access the file:\nchmod 600 .ssh/id_rsa"
  },
  {
    "objectID": "key-pairs-create.html#mac-finder",
    "href": "key-pairs-create.html#mac-finder",
    "title": "2  Create SSH-Key",
    "section": "2.5 Mac Finder",
    "text": "2.5 Mac Finder\n\nOpen Finder and navigate to your/Users/username/\n\n\n\n\n\n\n\nHow to show your home folder in Finder\n\n\n\n\n\nIf you don’t find your home: In Finder, click on the menue and choose: Finder > Preference > Sidebar > Show these items in the sidebar and checkmark the box beside the home icon.\n\n\n\n\nNow press the Command + Shift + . (period) keys at the same time. The hidden files will show up as translucent in your folder.\nOpen the folder .ssh.\nYou should see your public SSH key (id_rsa.pub) and private SSH key (id_rsa)"
  },
  {
    "objectID": "key-pairs-create.html#import-public-key",
    "href": "key-pairs-create.html#import-public-key",
    "title": "2  Create SSH-Key",
    "section": "2.6 Import public key",
    "text": "2.6 Import public key\n\nOpen your bwCloud Dashboard\nNavigate to Key Pairs in the left side menue.\nClick on Import Public Key\nProvide a Key Name and choose Key Type SSH Key.\nNow open your public key id_rsa.pub in a code editor like VS Code and copy and paste the content into Public Key"
  },
  {
    "objectID": "instance-create.html#details",
    "href": "instance-create.html#details",
    "title": "3  Create a launch instance",
    "section": "3.1 Details",
    "text": "3.1 Details\n\nProvide the instance name. We choose: ml-pipeline-01\nProvide a description for the instance, e.g. Example ML Pipeline\nChoose count 1"
  },
  {
    "objectID": "instance-create.html#source",
    "href": "instance-create.html#source",
    "title": "3  Create a launch instance",
    "section": "3.2 Source",
    "text": "3.2 Source\n\nInstance source is the template used to create an instance.\nChoose Ubuntu 22.04"
  },
  {
    "objectID": "instance-create.html#flavor",
    "href": "instance-create.html#flavor",
    "title": "3  Create a launch instance",
    "section": "3.3 Flavor",
    "text": "3.3 Flavor\nFlavors manage the sizing for the compute, memory and storage capacity of the instance.\n\nChoose m1.large (4 VCPUS, 8 GB Ram, 12 GB storage)"
  },
  {
    "objectID": "instance-create.html#networks",
    "href": "instance-create.html#networks",
    "title": "3  Create a launch instance",
    "section": "3.4 Networks",
    "text": "3.4 Networks\nNetworks provide the communication channels for instances in the cloud.\n\nWe use public-belwue"
  },
  {
    "objectID": "instance-create.html#network-ports",
    "href": "instance-create.html#network-ports",
    "title": "3  Create a launch instance",
    "section": "3.5 Network Ports",
    "text": "3.5 Network Ports\nPorts provide extra communication channels to your instances. You can select ports instead of networks or a mix of both.\n\nWe dont use network ports"
  },
  {
    "objectID": "instance-create.html#security-groups",
    "href": "instance-create.html#security-groups",
    "title": "3  Create a launch instance",
    "section": "3.6 Security Groups",
    "text": "3.6 Security Groups\n\nChoose default and your custom security groups\nFollow this bwCloud-tutorial to open a port."
  },
  {
    "objectID": "instance-create.html#key-pair",
    "href": "instance-create.html#key-pair",
    "title": "3  Create a launch instance",
    "section": "3.7 Key Pair",
    "text": "3.7 Key Pair\n\nSelect the key pair from step create-key-pairs. Here, it’s called id-rsa-pub"
  },
  {
    "objectID": "instance-create.html#launch-instance",
    "href": "instance-create.html#launch-instance",
    "title": "3  Create a launch instance",
    "section": "3.8 Launch Instance",
    "text": "3.8 Launch Instance\nWe are done and you can click on Launch Instance.\nYou should see your newly created instance in your dashboard.\nClick on the instance name to see more details"
  },
  {
    "objectID": "instance-create.html#increae-storage",
    "href": "instance-create.html#increae-storage",
    "title": "3  Create a launch instance",
    "section": "3.9 Increae Storage",
    "text": "3.9 Increae Storage\n\nLog in to bwCloud Dashboard\nClick on Volumes below Project → Volumes\nAn overview of the volumes you have created so far is displayed. To create a new volume, click on Create Volume\nA dialogue opens. Fill in the fields according to your requirements: block-device-01, We use 25 GiB.\nThen click on Create Volume. The volume is created\n\nIn order for a volume to be used by a virtual machine, it must be added (“attached”) to a VM.\n\nIn the table row of the desired volume, select the subitem Manage Attachments in the context menu at the right end of the row and click on the entry.\n\nA dialogue opens In the dialogue, select the desired virtual machine (ml-pipeline-01) and click on Attach Volume\n\nThe table updates and the path under which the new volume can be reached from within the virtual machine appears in the Attached To field\n\n/dev/vdb on ml-pipeline-01\n\nLog into the virtual machine\n\nCheck the external device:\nsudo fdisk -l\nThis will output\n...\nDisk /dev/vdb: 25 GiB, 26843545600 bytes, 52428800 sectors\nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nso for that you have to partition it first:\nsudo parted /dev/vdb\nAfter executing the above command, within the environment of the command, you should follow the command mentioned below to allow greater than 2GB’s partitions.\nmklabel GPT\nWithin this partition environment, you can also set the size, it depends on the user’s choice to allocate the space, as in our case we are limiting the partition from GB to 3GB by using the following command: you just have to change the upper bound to have a partition of greater or lesser size.\nmkpart primary 0GB 25GB\nOnce you have successfully attempted the above steps of partition; now you must assign a file system for the newly made partition. However, you can proceed only if you leave the parted environment; just type “quit” in the terminal and hit enter the terminal will come out of that environment:\nquit\nThe final step to active the partition is assigning file format for the new partition; so, you have to choose the file system (.ext4) of the newly made partition by using the below-mentioned command:\nsudo mkfs.ext4 /dev/vdb\nStep 3: Mount Process : Once the partition step is performed, you can mount the drive; before this, you should create a new directory in the “/mnt/” directory where the drives are usually mounted in Ubuntu. Make new directory in “/mnt/” by using the terminal as mentioned below:\nsudo mkdir /mnt/vdb\nOnce the directory is created, you can mount the inserted drive by using the command written below:\nsudo mount /dev/vdb /mnt/vdb\nHowever, it is observed that the below command will temporarily mount the drive, whenever you will restart the system, you must mount it again. To avoid such happening you must edit the file system table “fstab” by using the nano editor:\nsudo nano /etc/fstab\nNow, add the following content at the end of the file:\n/dev/vdb    /mnt/vdb     ext4      defaults        0             0\nCtrl+O will save the modifications you’ve made to the file. Ctrl+X will close nano.\nHow to check the drive is mounted or not\nYou can check the mounted drive by using the command mentioned below: you can specify the directory name (sdb in our case) after “grep” to get the pointed information; otherwise, the mount command will list down all the mounted drives and partitions in your system:\nsudo mount | grep vdb\n\n3.9.1 Install text-based web browser\nw3m is a text-based web browser as well as a pager like more' orless’. With w3m you can browse web pages through a terminal emulator windo\nsudo apt-get install w3m w3m-img\nto open a webpage simply type in a terminal window: w3m \nFor example:\nw3m https://w3m.sourceforge.net/\n\nto open a new page: type Shift-U\nto go back one page: Shift-B\nopen a new tab: Shift-T\nto exit: q"
  },
  {
    "objectID": "instance-login.html#terminal",
    "href": "instance-login.html#terminal",
    "title": "4  Log into instance",
    "section": "4.1 Terminal",
    "text": "4.1 Terminal\n\n4.1.1 Mac\nChange the IP adress and enter\nssh -i .ssh/id_rsa ubuntu@193.196.52.36\nIf you are asked: Are you sure you want to continue connecting (yes/no/[fingerprint])?\nEnter “yes”.\nEnter passphrase for key ‘.ssh/id_rsa’:\nProvide your password"
  }
]