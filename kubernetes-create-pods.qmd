---
title: "Hands on Kubernetes" 
format: 
  html: 
    embed-resources: true
    theme: 
      - cosmo 
      - custom.scss 
    toc: true 
    number-depth: 3  
    toc-title: Contents 
    toc-location: left 
    number-sections: true 
    html-math-method: mathjax 
    smooth-scroll: true 
---


## Prepare environment

We make a new directory:

```bash
mkdir github
```

Change into the directory:


```bash
cd github
```

Clone this GitHub-repo into the directory:

```bash
git clone https://github.com/nigelpoulton/TheK8sBook.git
```

List any existing Pods

```bash
sudo kubectl get pods

```

This should output: No resources found in default namespace.


You need to run the following commands from the `pods` folder where you cloned the book’s GitHub repo to:


```bash
cd TheK8sBook/pods

```


## Deploying Pods from a manifest file


Create your Pod with the manifest file *pod.yml*:


```bash
sudo kubectl apply -f pod.yml
```


## Check the status of Pods

Show status of your Pod with:

```bash
sudo kubectl get Pods
```

The Pod is running on a node and is being monitored by the local kubelet process.


To get a more detailed overview use:


```bash
sudo kubectl get pods -o yaml
```

Another option is:


```bash
sudo kubectl describe pods hello-pod
```

## Running commands in Pods 

Execute commands inside the Pod:


```bash
sudo kubectl exec -it hello-pod -- sh

```

- it makes the session interactive

Show Pod hostname inside interactive session:


```bash
env | grep HOSTNAME
```

The hostname of the container is set to the Pod's name.Note that you should alwasy set Pad names as valid DNS names (a-z and 0-9, the minus sign and the period sign).

Type exit to get back to the terminal


```bash
exit
```

## Multi-container Pod - sidecar container

The sidecar container is long-lives and runs alongside the main application container for the entire lifecycle of the Pod.

The first container "ctr-web" is the main app container. It serves as a static web page.

The second container is called "ctr-sync" and is teh sidecar. It watches a GitHub repo and syncs changes into the same shared volume.

If the content of the repo change, the "ctr-sync" sidecar will notice and update the web page.

Change directory to our github directory:

cd ../..

You should be in our github directory. Confirm this by listing the content of this directory:

ls

This should output TheK8sBook.


To see it in action, you’ll need a fork of the following GitHub repo. This is so you can make a change to the repo and see those changes reflected by the app. https://github.com/nigelpoulton/ps-sidecar
 Be sure to update the GIT_SYNC_REPO value in the sidecarpod.yml to reflect your forked repo and save your changes. Run one of the following commands to deploy the application. This will deploy the multi-container Pod as well as a Service object you can use to connect to the app. Run this command if you’re running a Docker Desktop or other local cluster.

Poulton, Nigel. The Kubernetes Book: 2022 Edition (S.66). leanpub.com. Kindle-Version. 