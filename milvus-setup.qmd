# Milvus installation


## Prepare Kubernetes

<!--

- Set the config file to the correct path:

```bash
export KUBECONFIG=/root/.kube/config
```
-->

- Ensure that the correct context is being used by running:

```bash
sudo kubectl config use-context kind-kind
```


<!--

- Start a K8s cluster using kind

```bash
sudo kind create cluster
```
-->


## Install Helm Chart for Milvus


- Add the Milvus chart repository to Helm:

```bash
sudo helm repo add milvus https://milvus-io.github.io/milvus-helm/
```

- Update your local chart repository.

```bash
sudo helm repo update
```

## Start Milvus

Start Milvus with Helm by specifying the release name, the chart, and parameters you expect to change. This topic uses `my-release` as the release name. To use a different release name, replace `my-release` in the command.


```
sudo helm install my-release milvus/milvus \
  --set cluster.enabled=false \
  --set etcd.replicaCount=1 \
  --set minio.mode=standalone \
  --set pulsar.enabled=false
```

This should output something like:

```bash
NAME: my-release
LAST DEPLOYED: Tue May 16 18:38:40 2023
NAMESPACE: default
STATUS: deployed
REVISION: 1
TEST SUITE: None
```

Check the status of the running pods.

```bash
sudo kubectl get pods
```

This outputs:

```bash
NAME                                            READY   STATUS    RESTARTS   AGE
my-release-etcd-0                               1/1     Running   0          5h29m
my-release-milvus-standalone-66cdddd564-8vg7l   1/1     Running   0          5h29m
my-release-minio-55cf49d57d-dqmzz               1/1     Running   0          5h29m
```

Milvus is running (it may take a while until you see `1/1` below READY for all pods)!