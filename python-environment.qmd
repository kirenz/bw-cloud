# Prepare programming environment



## Create environment: ds

- Run `sudo su`, that will open a shell as the superuser and activates the Miniconda base environment:

```bash
sudo su
```

- We install some modules in a new Miniconda environment. We call this new environment `ds` (for data science). 


- Copy this code and run it in your terminal: 


```bash
conda create -n ds python=3.10 pandas jupyter altair scikit-learn
```

- Restart VS Code to be able to use this environment in VS Code`s Jupyter Notebook 

## Create environment: transformers

- Run `sudo su`:

```bash
sudo su
```

- We install some modules in a new Miniconda environment. We call this new environment `transformers`:


```bash
conda create -n transformers python=3.10 pip --y
```


- Activate the new environment:

```bash
conda activate transformers
```

- Upgrade pip

```bash
pip install --upgrade pip
```

<!--

- Install the transformers library including Tensorflow with pip:

```bash
pip install 'transformers[tf-cpu]' ipykernel
```
-->

- Install the transformers library including PyTorch with pip:


```bash
pip install 'transformers[torch]' ipykernel

```

... this may take a while.

- Restart VS Code to be able to use this environment in VS Code`s Jupyter Notebook 


## Create environment: de

- Run `sudo su`, that will open a shell as the superuser and activates the Miniconda base environment:

```bash
sudo su
```

- We install some modules in a new Miniconda environment. We call this new environment `milvus`. 


- Copy this code and run it in your terminal: 


```bash
conda create -n milvus python=3.10 pip
```

- Activate the new environment:

```bash
conda activate milvus
```

- Install some packages with pip:

```bash
pip install numpy jupyter pymilvus
```

- Restart VS Code to be able to use this environment in VS Code`s Jupyter Notebook 


<!--

---

## Create environment: tf

Run `sudo su`, that will open a shell as the superuser.

```bash
sudo su
```

We install some modules in a new environment. We call this new environment `tf` (TensorFlow). 


- Copy this code and run it in your terminal: 


```bash
conda create -n tf python=3.9 pandas jupyter tensorflow
```

Activate the new environment:

```bash
conda activate tf
```

---


## Create environment: tfx

```bash
sudo su
```

```bash
sudo apt-get install gcc
```

If asked, type enter and use default settings to restart kernel 


```bash
sudo apt-get install g++
```

If asked, type enter and use default settings to restart kernel 



Now create a new environment `tfx` (TensorFlowExtended). Copy this code and run it in your terminal: 


```bash
conda create -n tfx python=3.9 pip 
```

Activate the new environment:

```bash
conda activate tfx
```

Upgrade pip:


```bash
pip install --upgrade pip

```


Now we have to use pip (pip is the package installer for Python) to install TFX. This table describes how the tfx package versions are compatible with its major dependency PyPI packages.


Install Tensorflow Extended


```bash
pip install tfx

```


Install additional modules:

pip install tensorflow-datasets

Export the path

export PATH=/mnt/vdc/miniforge/envs/tfx/bin/python3.9

Now create a new Jupyter Notebook and select the tfx environment

---

## How to select your environment

In Visual Studio Code:

1. [Create or open a Jupyter Notebook](https://code.visualstudio.com/docs/datascience/jupyter-notebooks#_create-or-open-a-jupyter-notebook)

1. Next, select a kernel using the kernel picker in the top right (select the Anaconda environment)

![](https://code.visualstudio.com/assets/docs/datascience/jupyter/native-kernel-picker.png)


If you can't see your newly created environment:

You can also manually specify an interpreter if Visual Studio Code doesn't locate your kernel automatically.

1. Show command palette: Press `cmd+shift+p` (Mac) or `strl+shift+p` (Windows)

1. Search for `Python: Select InterpreterÂ´

1. Select it and you should see a list of your virtual environments

1. Select the environment of your choice and you are ready to go.


If the steps described above should not work for you, take a look at other tips at [StackOverflow](https://stackoverflow.com/questions/43351596/activating-anaconda-environment-in-vscode).

-->