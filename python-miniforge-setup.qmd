# Install Python with miniforge

## Prepare environment

- Change directory into your volume:

```bash
cd /mnt/vdb
```

- Create a folder called bin

```bash
sudo mkdir bin
```


## Install miniforge

- Change directory into bin


```bash
cd bin
```

- Download the latest [Miniforge3 installer](https://github.com/conda-forge/miniforge):


```bash
sudo curl -L -O "https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh"
```

- Start the installation porcess:

```bash
sudo bash Miniforge3-$(uname)-$(uname -m).sh
```

- Press ENTER and scroll down, then type `yes` and press ENTER.

- If asked where to store miniforge, type in your partition as location:

```bash
/mnt/vdb/miniforge
```

- If asked: "Do you wish the installer to initialize Miniforge3
by running conda init? [yes|no]", type `yes`


- Run `sudo su` (that will open a shell as the superuser)

```bash
sudo su
```

- Now add miniforge to path as shown in the command below:

```bash
export PATH=/mnt/vdb/miniforge/bin:$PATH
```

- Initialize all shells with:

```bash
conda init --all
```

## Update path

- To be able to use miniforge, you'll need to update the PATH environment variable and make sure that the VS Code environment is aware of your Miniforge installation.

- Open the bash.bashrc file with nano:

```bash
sudo nano /etc/bash.bashrc
```

Update your PATH environment variable. Copy and paste the following lines at the end of the file:

```bash
export MINIFORGE_HOME="/mnt/vdb/miniforge3"

export PATH="$MINIFORGE_HOME/bin:$PATH"
```

- Next, press

1. `Ctrl+O` and confirm with enter to save the modifications you've made to the file
2. `Ctrl+X` to close nano. 



<!--

- Apply the changes to your current shell session.

```bash
source /etc/bash.bashrc
```

-->


- For changes to take effect, close (use the kill terminal icon ðŸ—‘ in VS Code).



<!--

## Install ipykernel


- Open a shell as the superuser:


```bash
sudo su
```

- Install the package ipykernel

```bash
conda install ipykernel 
```

Type `exit` to exit this shell.


Now close your connection and restart.

-->

## Start Jupyter Notebook in VS Code

In Visual Studio Code:

1. [Create a Jupyter Notebook file](https://code.visualstudio.com/docs/datascience/jupyter-notebooks#_create-or-open-a-jupyter-notebook)

1. Next, select a kernel using the "Select Kernel" picker in the top right 

1. Select Python Environments

1. 

![](https://code.visualstudio.com/assets/docs/datascience/jupyter/native-kernel-picker.png)


If you can't see your miniforge environment:

You can also manually specify an interpreter if Visual Studio Code doesn't locate your kernel automatically.

1. Show command palette: Press `cmd+shift+p` (Mac) or `strl+shift+p` (Windows)

1. Search for `Python: Select InterpreterÂ´

1. Select + enter interpreter path 

1. Choose the path (in my case: /mnt/vdc/miniforge/bin/python3.10 )


If the steps described above should not work for you, take a look at other tips at [StackOverflow](https://stackoverflow.com/questions/43351596/activating-anaconda-environment-in-vscode).



<!--

-----

OLD

## Install packages

Now add miniforge to path as shown in the command below:

```bash
export PATH=/mnt/vdc/miniforge/bin:$PATH
```

Initialize your shell with:

```bash
conda init zsh
```




NOT WORKING

## Change permissions

Read+Write+Execute:

sudo chmod -R a+rwx /var/www


sudo chmod a+rwx /mnt/vdc/miniforge

-->